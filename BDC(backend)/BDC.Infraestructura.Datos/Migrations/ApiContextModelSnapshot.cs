// <auto-generated />
using System;
using BDC.Infraestructura.Datos.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BDC.Infraestructura.Datos.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BDC.Dominio.Aplicativo", b =>
                {
                    b.Property<Guid>("id_aplicativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_aplicativo");

                    b.ToTable("tb1Aplicativos");
                });

            modelBuilder.Entity("BDC.Dominio.Cliente", b =>
                {
                    b.Property<Guid>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_cliente");

                    b.ToTable("tb1Clientes");
                });

            modelBuilder.Entity("BDC.Dominio.ClienteAplicacion", b =>
                {
                    b.Property<Guid>("id_aplicativo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("id_cliente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id_aplicativo", "id_cliente");

                    b.ToTable("tb1ClienteAplicacion");
                });

            modelBuilder.Entity("BDC.Dominio.ClienteProducto", b =>
                {
                    b.Property<Guid>("id_producto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("id_cliente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id_producto", "id_cliente");

                    b.ToTable("tb1ClienteProducto");
                });

            modelBuilder.Entity("BDC.Dominio.Codigo", b =>
                {
                    b.Property<Guid>("id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_aux1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_aux2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_aux3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("id_aplicativo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("id_producto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_codigo");

                    b.HasIndex("id_aplicativo");

                    b.HasIndex("id_producto");

                    b.ToTable("tb1Codigos");
                });

            modelBuilder.Entity("BDC.Dominio.Comentario", b =>
                {
                    b.Property<Guid>("id_comentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comentarioText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("id_usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_comentario");

                    b.HasIndex("id_usuario");

                    b.ToTable("tb1Comentarios");
                });

            modelBuilder.Entity("BDC.Dominio.Negocio", b =>
                {
                    b.Property<Guid>("id_negocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagen_path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_negocio");

                    b.ToTable("tb1Negocio_Lineas");
                });

            modelBuilder.Entity("BDC.Dominio.NegocioCliente", b =>
                {
                    b.Property<Guid>("id_negocio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("id_cliente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id_negocio", "id_cliente");

                    b.ToTable("tb1NegocioCliente");
                });

            modelBuilder.Entity("BDC.Dominio.Producto", b =>
                {
                    b.Property<Guid>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_producto");

                    b.ToTable("tb1Productos");
                });

            modelBuilder.Entity("BDC.Dominio.Usuario", b =>
                {
                    b.Property<Guid>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_usuario");

                    b.ToTable("tb1Usuarios");
                });

            modelBuilder.Entity("BDC.Dominio.Codigo", b =>
                {
                    b.HasOne("BDC.Dominio.Aplicativo", null)
                        .WithMany()
                        .HasForeignKey("id_aplicativo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDC.Dominio.Producto", null)
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BDC.Dominio.Comentario", b =>
                {
                    b.HasOne("BDC.Dominio.Usuario", null)
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
